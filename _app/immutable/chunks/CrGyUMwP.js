function k(){}function x(t,n){for(const e in n)t[e]=n[e];return t}function w(t){return t()}function F(){return Object.create(null)}function E(t){t.forEach(w)}function M(t){return typeof t=="function"}function P(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}let a;function S(t,n){return t===n?!0:(a||(a=document.createElement("a")),a.href=n,t===a.href)}function U(t){return Object.keys(t).length===0}function j(t,...n){if(t==null){for(const c of n)c(void 0);return k}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function A(t,n,e){t.$$.on_destroy.push(j(n,e))}function B(t,n,e,c){if(t){const u=p(t,n,e,c);return t[0](u)}}function p(t,n,e,c){return t[1]&&c?x(e.ctx.slice(),t[1](c(n))):e.ctx}function C(t,n,e,c){return t[2],n.dirty}function D(t,n,e,c,u,m){if(u){const y=p(n,e,c,m);t.p(y,u)}}function G(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let c=0;c<e;c++)n[c]=-1;return n}return-1}let l;function i(t){l=t}function b(){if(!l)throw new Error("Function called outside component initialization");return l}function H(t){b().$$.on_mount.push(t)}function I(t){b().$$.after_update.push(t)}function J(t,n){const e=t.$$.callbacks[n.type];e&&e.slice().forEach(c=>c.call(this,n))}const s=[],h=[];let r=[];const d=[],g=Promise.resolve();let _=!1;function q(){_||(_=!0,g.then(O))}function K(){return q(),g}function v(t){r.push(t)}const f=new Set;let o=0;function O(){if(o!==0)return;const t=l;do{try{for(;o<s.length;){const n=s[o];o++,i(n),z(n.$$)}}catch(n){throw s.length=0,o=0,n}for(i(null),s.length=0,o=0;h.length;)h.pop()();for(let n=0;n<r.length;n+=1){const e=r[n];f.has(e)||(f.add(e),e())}r.length=0}while(s.length);for(;d.length;)d.pop()();_=!1,f.clear(),i(t)}function z(t){if(t.fragment!==null){t.update(),E(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(v)}}function L(t){const n=[],e=[];r.forEach(c=>t.indexOf(c)===-1?n.push(c):e.push(c)),e.forEach(c=>c()),r=n}export{S as a,J as b,A as c,I as d,h as e,U as f,l as g,F as h,M as i,O as j,i as k,L as l,v as m,k as n,H as o,w as p,s as q,E as r,P as s,K as t,q as u,B as v,D as w,G as x,C as y};
