import{s as Ws,n as us}from"./scheduler.BzV8Pfuc.js";import{S as Ys,i as $s,e as t,s as e,H as I,c as p,k as i,f as o,n as S,l as c,g as n,d as l}from"./index.BUIsPQbh.js";function Zs(js){let r,Ds='<ol class="toc-level toc-level-1"><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#why-nix-on-non-nixos-systems">Why Nix on Non Nixos Systems?</a><ol class="toc-level toc-level-2"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#resources">Resources</a></li></ol></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#installation">Installation</a><ol class="toc-level toc-level-2"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#nix">Nix</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#channels">Channels</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#home-manager">Home Manager</a></li></ol></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#setting-up-home-manager">Setting up Home manager</a><ol class="toc-level toc-level-2"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#using-programs-with-graphics-acceleration">Using programs with graphics acceleration</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#macos">MacOS</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#popos">PopOS</a></li></ol></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#reflections">Reflections</a></li></ol>',Y,y,fs='<a aria-hidden="true" tabindex="-1" href="#why-nix-on-non-nixos-systems"><span class="icon icon-link"></span></a>Why Nix on Non Nixos Systems?',$,k,ds="<li>Nix gives you <em>declarative package management</em> ie you can declare what packages you want on your system and know exactly what is being installed and at what version.</li> <li>this pairs perfectly with a workflow that involves several machines<ul><li>for me this is my MacOs laptop for working on campus and my Linux desktop for working at home. Having the same version of the same packages on each simplifies development, especially when dealing with niche software.</li></ul></li> <li>nix on other distros works if you want to try out declarative package management without jumping in with both feet. You are able to get a taste for the nix ecosystem without welding yourself to it, and if you are on a stable debian system you have the benefits of long term stability.</li>",Z,E,gs='<a aria-hidden="true" tabindex="-1" href="#resources"><span class="icon icon-link"></span></a>Resources',J,x,Bs='<li>some good websites with documentation for the determinate nix installer, home manager, and nix usage in general<ul><li><a href="https://nix-community.github.io/home-manager/" rel="nofollow">home-manager docs</a></li> <li><a href="https://github.com/DeterminateSystems/nix-installer" rel="nofollow">determinate systems</a></li> <li><a href="https://zero-to-nix.com/" rel="nofollow">zero to nix</a></li> <li><a href="https://nixos.wiki/wiki/Home_Manager" rel="nofollow">home-manager wiki</a></li></ul></li>',K,h,As='<a aria-hidden="true" tabindex="-1" href="#installation"><span class="icon icon-link"></span></a>Installation',Q,m,ks='<a aria-hidden="true" tabindex="-1" href="#nix"><span class="icon icon-link"></span></a>Nix',X,v,xs="<li>using the determinate systems nix installer<ul><li>built with rust</li> <li>allows flakes by default</li></ul></li>",ss,U,qs=`<pre class="shiki gruvbox" style="background-color:#292828;color:#d4be98" tabindex="0"><code><span class="line"><span style="color:#A9B665">curl</span><span style="color:#D8A657"> --proto</span><span style="color:#A9B665"> '=https'</span><span style="color:#D8A657"> --tlsv1.2</span><span style="color:#D8A657"> -sSf</span><span style="color:#D8A657"> -L</span><span style="color:#D8A657"> https://install.determinate.systems/nix</span><span style="color:#E78A4E"> |</span><span style="color:#A9B665"> </span></span>
<span class="line"><span style="color:#A9B665">  sh</span><span style="color:#D8A657"> -s</span><span style="color:#D8A657"> --</span><span style="color:#D8A657"> install</span></span></code></pre>`,z,u,vs='<a aria-hidden="true" tabindex="-1" href="#channels"><span class="icon icon-link"></span></a>Channels',as,b,bs="<li>using channels which is essentially the repo with all nix packages that get used to install packages on your system</li>",ns,N,Gs=`<pre class="shiki gruvbox" style="background-color:#292828;color:#d4be98" tabindex="0"><code><span class="line"><span style="color:#928374;font-style:italic"># unstable / master</span></span>
<span class="line"><span style="color:#A9B665">nix-channel</span><span style="color:#D8A657"> --add</span><span style="color:#D8A657"> https://nixos.org/channels/nixos-unstable</span></span></code></pre>`,O,D,ws='<a aria-hidden="true" tabindex="-1" href="#home-manager"><span class="icon icon-link"></span></a>Home Manager',ls,w,Hs="<li>Installation of home-manager<ul><li>installing via channels</li></ul></li>",es,j,Vs=`<pre class="shiki gruvbox" style="background-color:#292828;color:#d4be98" tabindex="0"><code><span class="line"><span style="color:#928374;font-style:italic"># when using 'unstable' channel</span></span>
<span class="line"><span style="color:#A9B665">nix-channel</span><span style="color:#D8A657"> --add</span><span style="color:#D8A657"> https://github.com/nix-community/home-manager/archive/master.tar.gz</span><span style="color:#D8A657"> home-manager</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A9B665">nix-channel</span><span style="color:#D8A657"> --update</span></span></code></pre>`,q,H,Ls="<li>Useful commands<ul><li>for installing</li> <li>updating</li> <li>cleaning out cached files no longer in use</li></ul></li>",os,G,Ps=`<pre class="shiki gruvbox" style="background-color:#292828;color:#d4be98" tabindex="0"><code><span class="line"><span style="color:#928374;font-style:italic"># add a new nix channel</span></span>
<span class="line"><span style="color:#A9B665">nix-channel</span><span style="color:#D8A657"> --add</span><span style="color:#D8A657"> some-channel</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic"># update channels (must be run after adding a new channel)</span></span>
<span class="line"><span style="color:#A9B665">nix-channel</span><span style="color:#D8A657"> --update</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic"># remove old nix versions -d deletes all old versions</span></span>
<span class="line"><span style="color:#A9B665">nix-college-garbage</span><span style="color:#D8A657"> -d</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic"># build and switch to new home-manager generation</span></span>
<span class="line"><span style="color:#A9B665">home-manager</span><span style="color:#D8A657"> switch</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic"># some handy alias</span></span>
<span class="line"><span style="color:#7DAEA3">alias</span><span style="color:#D4BE98"> hms</span><span style="color:#E78A4E">=</span><span style="color:#A9B665">'home-manager switch'</span></span>
<span class="line"><span style="color:#7DAEA3">alias</span><span style="color:#D4BE98"> hmd</span><span style="color:#E78A4E">=</span><span style="color:#A9B665">'home-manager switch &#x26;&#x26; nix-collect-garbage -d'</span></span></code></pre>`,V,f,Ms='<a aria-hidden="true" tabindex="-1" href="#setting-up-home-manager"><span class="icon icon-link"></span></a>Setting up Home manager',ts,L,Ts="<li>your home manager config lives in <code>$HOME/.config/home-manager/home.nix</code><ul><li>it is where you declare profile specific packages and configurations</li></ul></li>",ps,d,_s='<a aria-hidden="true" tabindex="-1" href="#using-programs-with-graphics-acceleration"><span class="icon icon-link"></span></a>Using programs with graphics acceleration',is,M,Cs="<li>to use these packages you might need to ‘wrap’ them in a package that detects what GPU’s are available on your system</li> <li>for this I am using <code>nixgl</code> which determines which GPU framework to use and wraps your desired package with it, ensuring that it will run properly on your system.</li>",cs,g,Is='<a aria-hidden="true" tabindex="-1" href="#macos"><span class="icon icon-link"></span></a>MacOS',rs,T,Ss="<li>on MacOs I was having issues with zsh_history so I decided to set it manually.<ul><li>You can use home manager to manage your dotfiles but I prefer <strong>gnu stow</strong>, it is a bit more simple and works accross machines without nix and home manager</li> <li>I <strong>do not</strong> use nix for GUI applications. This might be a skill issue but you need a script to let <em>Spotlight</em> know where apps are to open them and I prefer <em>Homebrew</em> for GUI applications.</li></ul></li>",ys,P,Rs=`<pre class="shiki gruvbox" style="background-color:#292828;color:#d4be98" tabindex="0"><code><span class="line"><span style="color:#D4BE98">&#123; config</span><span style="color:#E78A4E">,</span><span style="color:#D4BE98"> pkgs</span><span style="color:#E78A4E">,</span><span style="color:#E78A4E"> ... </span><span style="color:#D4BE98">&#125;:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic"># when you need an older package</span></span>
<span class="line"><span style="color:#928374;font-style:italic"># let</span></span>
<span class="line"><span style="color:#928374;font-style:italic"># pkgStable = import &#x3C;stable> &#123; &#125;;</span></span>
<span class="line"><span style="color:#928374;font-style:italic"># in</span></span>
<span class="line"><span style="color:#D4BE98">&#123;</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  # User information</span></span>
<span class="line"><span style="color:#D8A657">  home</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">username</span><span style="color:#E78A4E"> =</span><span style="color:#D4BE98"> "</span><span style="color:#D8A657">cade</span><span style="color:#D4BE98">"</span><span style="color:#D4BE98">;</span></span>
<span class="line"><span style="color:#D8A657">  home</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">homeDirectory</span><span style="color:#E78A4E"> =</span><span style="color:#D4BE98"> "</span><span style="color:#D8A657">/Users/cade</span><span style="color:#D4BE98">"</span><span style="color:#D4BE98">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">  # Compatible Home Manager release</span></span>
<span class="line"><span style="color:#D8A657">  home</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">stateVersion</span><span style="color:#E78A4E"> =</span><span style="color:#D4BE98"> "</span><span style="color:#D8A657">24.05</span><span style="color:#D4BE98">"</span><span style="color:#D4BE98">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">  # Allow home manager to configure fonts</span></span>
<span class="line"><span style="color:#D8A657">  fonts</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">fontconfig</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">enable</span><span style="color:#E78A4E"> =</span><span style="color:#D3869B"> true</span><span style="color:#D4BE98">;</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  # Installed packages</span></span>
<span class="line"><span style="color:#D8A657">  home</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">packages</span><span style="color:#E78A4E"> =</span><span style="color:#D4BE98"> [</span></span>
<span class="line"><span style="color:#928374;font-style:italic">    # Terminal</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">bat</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">coreutils</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">eza</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">fh</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">fzf</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">gawk</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">htop</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">imagemagick</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">lazygit</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">pfetch</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">qrencode</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">ripgrep</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">starship</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">tree-sitter</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">yazi</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">zellij</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">zoxide</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">    # Fonts (Nerd fonts is now in unstable)</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">nerd-fonts</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">hack</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">nerd-fonts</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">blex-mono</span></span>
<span class="line"><span style="color:#928374;font-style:italic">    # Editor</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">neovim</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">    # Verification</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">souffle</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">    # Languages</span></span>
<span class="line"><span style="color:#928374;font-style:italic">    # -> lua</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">luajit</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">lua-language-server</span></span>
<span class="line"><span style="color:#928374;font-style:italic">    # -> go</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">go</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">gopls</span></span>
<span class="line"><span style="color:#928374;font-style:italic">    # -> haskell</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">ghc</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">cabal-install</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">stack</span></span>
<span class="line"><span style="color:#928374;font-style:italic">    # -> nix</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">nixd</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">nixfmt-rfc-style</span></span>
<span class="line"><span style="color:#928374;font-style:italic">    # -> python</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">uv</span></span>
<span class="line"><span style="color:#D4BE98">  ];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">  # ~/.nix-profile/etc/profile.d/hm-session-vars.sh</span></span>
<span class="line"><span style="color:#D8A657">  home</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">sessionVariables</span><span style="color:#E78A4E"> =</span><span style="color:#D4BE98"> &#123;</span></span>
<span class="line"><span style="color:#D8A657">    EDITOR</span><span style="color:#E78A4E"> =</span><span style="color:#D4BE98"> "</span><span style="color:#D8A657">nvim</span><span style="color:#D4BE98">"</span><span style="color:#D4BE98">;</span></span>
<span class="line"><span style="color:#D8A657">    HISTFILE</span><span style="color:#E78A4E"> =</span><span style="color:#D4BE98"> "</span><span style="color:#D8A657">$HOME/.zsh_history</span><span style="color:#D4BE98">"</span><span style="color:#D4BE98">;</span></span>
<span class="line"><span style="color:#D8A657">    HISTSIZE</span><span style="color:#E78A4E"> =</span><span style="color:#D3869B"> 1000</span><span style="color:#D4BE98">;</span></span>
<span class="line"><span style="color:#D8A657">    SAVEHIST</span><span style="color:#E78A4E"> =</span><span style="color:#D3869B"> 1000</span><span style="color:#D4BE98">;</span></span>
<span class="line"><span style="color:#D4BE98">  &#125;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">  # Let Home Manager install and manage itself.</span></span>
<span class="line"><span style="color:#D8A657">  programs</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">home-manager</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">enable</span><span style="color:#E78A4E"> =</span><span style="color:#D3869B"> true</span><span style="color:#D4BE98">;</span></span>
<span class="line"><span style="color:#D4BE98">&#125;</span></span></code></pre>`,R,B,Us='<a aria-hidden="true" tabindex="-1" href="#popos"><span class="icon icon-link"></span></a>PopOS',Es,_,zs="<li>my ‘generic linux’ home manager config mirrors my MacOs one with one important change<ul><li><code>targets.genericLinux.enable = true;</code></li> <li>this allows for a more ‘native’ integration of nix packages into your non nixos linux distribution</li></ul></li>",hs,F,Fs=`<pre class="shiki gruvbox" style="background-color:#292828;color:#d4be98" tabindex="0"><code><span class="line"><span style="color:#D4BE98">&#123; config</span><span style="color:#E78A4E">,</span><span style="color:#D4BE98"> pkgs</span><span style="color:#E78A4E">,</span><span style="color:#E78A4E"> ... </span><span style="color:#D4BE98">&#125;:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4BE98">&#123;</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  # Home Manager general setup</span></span>
<span class="line"><span style="color:#D8A657">  home</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">username</span><span style="color:#E78A4E"> =</span><span style="color:#D4BE98"> "</span><span style="color:#D8A657">cade</span><span style="color:#D4BE98">"</span><span style="color:#D4BE98">;</span></span>
<span class="line"><span style="color:#D8A657">  home</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">homeDirectory</span><span style="color:#E78A4E"> =</span><span style="color:#D4BE98"> "</span><span style="color:#D8A657">/home/cade</span><span style="color:#D4BE98">"</span><span style="color:#D4BE98">;</span></span>
<span class="line"><span style="color:#D8A657">  targets</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">genericLinux</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">enable</span><span style="color:#E78A4E"> =</span><span style="color:#D3869B"> true</span><span style="color:#D4BE98">;</span></span>
<span class="line"><span style="color:#D8A657">  fonts</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">fontconfig</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">enable</span><span style="color:#E78A4E"> =</span><span style="color:#D3869B"> true</span><span style="color:#D4BE98">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">  # Home manager version at install time</span></span>
<span class="line"><span style="color:#D8A657">  home</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">stateVersion</span><span style="color:#E78A4E"> =</span><span style="color:#D4BE98"> "</span><span style="color:#D8A657">24.05</span><span style="color:#D4BE98">"</span><span style="color:#D4BE98">; </span><span style="color:#928374;font-style:italic"># Please read the comment before changing.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8A657">  nixGL</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">packages</span><span style="color:#E78A4E"> =</span><span style="color:#A9B665"> import</span><span style="color:#D8A657"> &#x3C;nixgl></span><span style="color:#D4BE98"> &#123; </span><span style="color:#EA6962">inherit</span><span style="color:#D8A657"> pkgs</span><span style="color:#D4BE98">; &#125;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D8A657">  home</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">packages</span><span style="color:#E78A4E"> =</span><span style="color:#D4BE98"> [</span></span>
<span class="line"><span style="color:#928374;font-style:italic">    # Terminal</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">bat</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">fzf</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">lazygit</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">ripgrep</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">tmux</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">tree</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">zoxide</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">    # GUI Applications</span></span>
<span class="line"><span style="color:#D4BE98">    (config</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">lib</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">nixGL</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">wrap pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">rio)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">    # Languages</span></span>
<span class="line"><span style="color:#928374;font-style:italic">    # -> lua</span></span>
<span class="line"><span style="color:#D4BE98">    pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">lua-language-server</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">    # Fonts</span></span>
<span class="line"><span style="color:#D4BE98">    (pkgs</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">nerdfonts</span><span style="color:#E78A4E">.</span><span style="color:#D4BE98">override &#123; </span><span style="color:#D8A657">fonts</span><span style="color:#E78A4E"> =</span><span style="color:#D4BE98"> [ </span><span style="color:#D4BE98">"</span><span style="color:#D8A657">CascadiaCode</span><span style="color:#D4BE98">"</span><span style="color:#D4BE98"> ]; &#125;)</span></span>
<span class="line"><span style="color:#928374;font-style:italic">    # </span><span style="color:#928374;font-weight:bold">!!!</span><span style="color:#928374;font-style:italic"> nerd fonts are in the unstable nix channel as 'pkgs.nerd-fonts.&#x3C;font name>'</span></span>
<span class="line"><span style="color:#D4BE98">  ];</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">  # Home Manager can also manage your environment variables through</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  # 'home.sessionVariables'. These will be explicitly sourced when using a</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  # shell provided by Home Manager. If you don't want to manage your shell</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  # through Home Manager then you have to manually source 'hm-session-vars.sh'</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  # located at either</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  #</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  #  ~/.nix-profile/etc/profile.d/hm-session-vars.sh</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  #</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  # or</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  #</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  #  ~/.local/state/nix/profiles/profile/etc/profile.d/hm-session-vars.sh</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  #</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  # or</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  #</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  #  /etc/profiles/per-user/cade/etc/profile.d/hm-session-vars.sh</span></span>
<span class="line"><span style="color:#928374;font-style:italic">  #</span></span>
<span class="line"></span>
<span class="line"><span style="color:#928374;font-style:italic">  # Let Home Manager install and manage itself.</span></span>
<span class="line"><span style="color:#D8A657">  programs</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">home-manager</span><span style="color:#D4BE98">.</span><span style="color:#D8A657">enable</span><span style="color:#E78A4E"> =</span><span style="color:#D3869B"> true</span><span style="color:#D4BE98">;</span></span>
<span class="line"><span style="color:#D4BE98">&#125;</span></span></code></pre>`,W,A,Ns='<a aria-hidden="true" tabindex="-1" href="#reflections"><span class="icon icon-link"></span></a>Reflections',ms,C,Os="<li>It took some time to dive into nix and home-manager but I believe that it was worth it.</li> <li>For school I am using a good deal of niche packages and nix has helped me ease the installation of them across mac and debian (based systems). I love debian but every time I have to use some niche research software I don’t want to build it from source and nix helps with this.</li> <li>I prefer having something stable and using nix on top of it as an added benefit. It is like the Blade of Nixos, none of it’s weaknesses all of its strengths.</li> <li>Additionally learning more about nix and the nix ecosystem led me to use flakes, not for configuration, but for developing with beta software such as Lean4 (they said it’s beta software not me I ❤️ Lean4) and it allowed me to work on projects across machines without worrying about versioning conflicts.</li>";return{c(){r=t("nav"),r.innerHTML=Ds,Y=e(),y=t("h1"),y.innerHTML=fs,$=e(),k=t("ul"),k.innerHTML=ds,Z=e(),E=t("h2"),E.innerHTML=gs,J=e(),x=t("ul"),x.innerHTML=Bs,K=e(),h=t("h1"),h.innerHTML=As,Q=e(),m=t("h2"),m.innerHTML=ks,X=e(),v=t("ul"),v.innerHTML=xs,ss=e(),U=new I(!1),z=e(),u=t("h2"),u.innerHTML=vs,as=e(),b=t("ul"),b.innerHTML=bs,ns=e(),N=new I(!1),O=e(),D=t("h2"),D.innerHTML=ws,ls=e(),w=t("ul"),w.innerHTML=Hs,es=e(),j=new I(!1),q=e(),H=t("ul"),H.innerHTML=Ls,os=e(),G=new I(!1),V=e(),f=t("h1"),f.innerHTML=Ms,ts=e(),L=t("ul"),L.innerHTML=Ts,ps=e(),d=t("h2"),d.innerHTML=_s,is=e(),M=t("ul"),M.innerHTML=Cs,cs=e(),g=t("h2"),g.innerHTML=Is,rs=e(),T=t("ul"),T.innerHTML=Ss,ys=e(),P=new I(!1),R=e(),B=t("h2"),B.innerHTML=Us,Es=e(),_=t("ul"),_.innerHTML=zs,hs=e(),F=new I(!1),W=e(),A=t("h1"),A.innerHTML=Ns,ms=e(),C=t("ul"),C.innerHTML=Os,this.h()},l(s){r=p(s,"NAV",{class:!0,"data-svelte-h":!0}),i(r)!=="svelte-15kulrl"&&(r.innerHTML=Ds),Y=o(s),y=p(s,"H1",{id:!0,"data-svelte-h":!0}),i(y)!=="svelte-85xpd3"&&(y.innerHTML=fs),$=o(s),k=p(s,"UL",{"data-svelte-h":!0}),i(k)!=="svelte-10gz6t0"&&(k.innerHTML=ds),Z=o(s),E=p(s,"H2",{id:!0,"data-svelte-h":!0}),i(E)!=="svelte-xwcryz"&&(E.innerHTML=gs),J=o(s),x=p(s,"UL",{"data-svelte-h":!0}),i(x)!=="svelte-3kujzq"&&(x.innerHTML=Bs),K=o(s),h=p(s,"H1",{id:!0,"data-svelte-h":!0}),i(h)!=="svelte-1d4reqo"&&(h.innerHTML=As),Q=o(s),m=p(s,"H2",{id:!0,"data-svelte-h":!0}),i(m)!=="svelte-9fcu1l"&&(m.innerHTML=ks),X=o(s),v=p(s,"UL",{"data-svelte-h":!0}),i(v)!=="svelte-con91a"&&(v.innerHTML=xs),ss=o(s),U=S(s,!1),z=o(s),u=p(s,"H2",{id:!0,"data-svelte-h":!0}),i(u)!=="svelte-1xofp9o"&&(u.innerHTML=vs),as=o(s),b=p(s,"UL",{"data-svelte-h":!0}),i(b)!=="svelte-hq5qut"&&(b.innerHTML=bs),ns=o(s),N=S(s,!1),O=o(s),D=p(s,"H2",{id:!0,"data-svelte-h":!0}),i(D)!=="svelte-16bjjqa"&&(D.innerHTML=ws),ls=o(s),w=p(s,"UL",{"data-svelte-h":!0}),i(w)!=="svelte-scj39g"&&(w.innerHTML=Hs),es=o(s),j=S(s,!1),q=o(s),H=p(s,"UL",{"data-svelte-h":!0}),i(H)!=="svelte-1ai02gh"&&(H.innerHTML=Ls),os=o(s),G=S(s,!1),V=o(s),f=p(s,"H1",{id:!0,"data-svelte-h":!0}),i(f)!=="svelte-bzqz0r"&&(f.innerHTML=Ms),ts=o(s),L=p(s,"UL",{"data-svelte-h":!0}),i(L)!=="svelte-1116o01"&&(L.innerHTML=Ts),ps=o(s),d=p(s,"H2",{id:!0,"data-svelte-h":!0}),i(d)!=="svelte-1ootylk"&&(d.innerHTML=_s),is=o(s),M=p(s,"UL",{"data-svelte-h":!0}),i(M)!=="svelte-1lrkivi"&&(M.innerHTML=Cs),cs=o(s),g=p(s,"H2",{id:!0,"data-svelte-h":!0}),i(g)!=="svelte-ch9s6f"&&(g.innerHTML=Is),rs=o(s),T=p(s,"UL",{"data-svelte-h":!0}),i(T)!=="svelte-1fk5dt4"&&(T.innerHTML=Ss),ys=o(s),P=S(s,!1),R=o(s),B=p(s,"H2",{id:!0,"data-svelte-h":!0}),i(B)!=="svelte-s38flb"&&(B.innerHTML=Us),Es=o(s),_=p(s,"UL",{"data-svelte-h":!0}),i(_)!=="svelte-1tnv29b"&&(_.innerHTML=zs),hs=o(s),F=S(s,!1),W=o(s),A=p(s,"H1",{id:!0,"data-svelte-h":!0}),i(A)!=="svelte-a0v5je"&&(A.innerHTML=Ns),ms=o(s),C=p(s,"UL",{"data-svelte-h":!0}),i(C)!=="svelte-18ygozc"&&(C.innerHTML=Os),this.h()},h(){c(r,"class","toc"),c(y,"id","why-nix-on-non-nixos-systems"),c(E,"id","resources"),c(h,"id","installation"),c(m,"id","nix"),U.a=z,c(u,"id","channels"),N.a=O,c(D,"id","home-manager"),j.a=q,G.a=V,c(f,"id","setting-up-home-manager"),c(d,"id","using-programs-with-graphics-acceleration"),c(g,"id","macos"),P.a=R,c(B,"id","popos"),F.a=W,c(A,"id","reflections")},m(s,a){n(s,r,a),n(s,Y,a),n(s,y,a),n(s,$,a),n(s,k,a),n(s,Z,a),n(s,E,a),n(s,J,a),n(s,x,a),n(s,K,a),n(s,h,a),n(s,Q,a),n(s,m,a),n(s,X,a),n(s,v,a),n(s,ss,a),U.m(qs,s,a),n(s,z,a),n(s,u,a),n(s,as,a),n(s,b,a),n(s,ns,a),N.m(Gs,s,a),n(s,O,a),n(s,D,a),n(s,ls,a),n(s,w,a),n(s,es,a),j.m(Vs,s,a),n(s,q,a),n(s,H,a),n(s,os,a),G.m(Ps,s,a),n(s,V,a),n(s,f,a),n(s,ts,a),n(s,L,a),n(s,ps,a),n(s,d,a),n(s,is,a),n(s,M,a),n(s,cs,a),n(s,g,a),n(s,rs,a),n(s,T,a),n(s,ys,a),P.m(Rs,s,a),n(s,R,a),n(s,B,a),n(s,Es,a),n(s,_,a),n(s,hs,a),F.m(Fs,s,a),n(s,W,a),n(s,A,a),n(s,ms,a),n(s,C,a)},p:us,i:us,o:us,d(s){s&&(l(r),l(Y),l(y),l($),l(k),l(Z),l(E),l(J),l(x),l(K),l(h),l(Q),l(m),l(X),l(v),l(ss),U.d(),l(z),l(u),l(as),l(b),l(ns),N.d(),l(O),l(D),l(ls),l(w),l(es),j.d(),l(q),l(H),l(os),G.d(),l(V),l(f),l(ts),l(L),l(ps),l(d),l(is),l(M),l(cs),l(g),l(rs),l(T),l(ys),P.d(),l(R),l(B),l(Es),l(_),l(hs),F.d(),l(W),l(A),l(ms),l(C))}}}const Qs={title:"Nix as a package manager for Mac Os and Debian Systems",date:"11-16-24"};class Xs extends Ys{constructor(r){super(),$s(this,r,null,Zs,Ws,{})}}export{Xs as default,Qs as metadata};
